# Generated by copilot-helper v0.1-TEST / 2023-08-22 16:00:00

Parameters:
  # Copilot required Parameters...
  App:
    Type: String
    Description: Your application's name.
  Env:
    Type: String
    Description: The environment name your service, job, or workflow is being deployed to.

Mappings:
  myS3BucketEnvironmentConfigMap:
    # Create an entry for each environment

    development:
      BucketName: 'my-bucket-dev'
      DeletionPolicy: Delete
      RetentionMode: COMPLIANCE
      RetentionDurationType: Days
      RetentionDuration: 1

Conditions:
  myS3BucketApplyRetentionPolicy: !Not
    - !Equals
      - !FindInMap
        - myS3BucketEnvironmentConfigMap
        - !Ref Env
        - RetentionPolicy
        - DefaultValue: No retention
      - No retention
  myS3BucketRetentionPolicyDurationIsInDays: !Equals
    - !FindInMap
      - myS3BucketEnvironmentConfigMap
      - !Ref Env
      - RetentionDurationType
      - DefaultValue: Days
    - Days

Resources:
  myS3BucketKMSKey:
    Type: "AWS::KMS::Key"
    DeletionPolicy: !FindInMap [myS3BucketEnvironmentConfigMap, !Ref Env, DeletionPolicy]
    UpdateReplacePolicy: Retain
    Properties:
      Description: "KMS Key for RDS encryption"
      KeyPolicy:
        Version: '2012-10-17'
        Id: !Sub '${App}-${Env}-myS3Bucket-key'
        Statement:
        - Sid: Enable IAM User Permissions
          Effect: Allow
          Principal:
            AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
          Action: kms:*
          Resource: '*'

  myS3BucketKeyAlias:
    Type: 'AWS::KMS::Alias'
    DeletionPolicy: !FindInMap [myS3BucketEnvironmentConfigMap, !Ref Env, DeletionPolicy]
    UpdateReplacePolicy: Retain
    Properties:
      AliasName: !Sub 'alias/${App}-${Env}-myS3Bucket-key'
      TargetKeyId: !Ref myS3BucketKMSKey

  myS3BucketBucket:
    Metadata:
      'aws:copilot:description': 'An Amazon S3 bucket to store and retrieve objects for myS3Bucket'
    Type: AWS::S3::Bucket
    DeletionPolicy: !FindInMap [myS3BucketEnvironmentConfigMap, !Ref Env, DeletionPolicy]
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !FindInMap [myS3BucketEnvironmentConfigMap, !Ref Env, BucketName]
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: aws:kms
            KMSMasterKeyID: !Ref myS3BucketKMSKey
      ObjectLockConfiguration:
        !If
        - myS3BucketApplyRetentionPolicy
        - ObjectLockEnabled: Enabled
          Rule:
            DefaultRetention: !If
              - myS3BucketRetentionPolicyDurationIsInDays
              - Mode: !FindInMap [myS3BucketEnvironmentConfigMap, !Ref Env, RetentionMode]
                Days: !FindInMap
                  - myS3BucketEnvironmentConfigMap
                  - !Ref Env
                  - RetentionDuration
              - Mode: !FindInMap [myS3BucketEnvironmentConfigMap, !Ref Env, RetentionMode]
                Years: !FindInMap
                  - myS3BucketEnvironmentConfigMap
                  - !Ref Env
                  - RetentionDuration
        - !Ref AWS::NoValue
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Copilot-application
          Value: !Ref App
        - Key: Copilot-environment
          Value: !Ref Env
        - Key: Copilot-deletion-policy
          Value: !FindInMap [myS3BucketEnvironmentConfigMap, !Ref Env, DeletionPolicy]

  myS3BucketBucketPolicy:
    Metadata:
      'aws:copilot:description': 'A bucket policy to deny unencrypted access to the bucket and its contents'
    Type: AWS::S3::BucketPolicy
    DeletionPolicy: !FindInMap [myS3BucketEnvironmentConfigMap, !Ref Env, DeletionPolicy]
    UpdateReplacePolicy: Retain
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ForceHTTPS
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource:
              - !Sub ${ myS3BucketBucket.Arn}/*
              - !Sub ${ myS3BucketBucket.Arn}
            Condition:
              Bool:
                "aws:SecureTransport": false
      Bucket: !Ref myS3BucketBucket



Outputs:
  myS3BucketName:
    Description: "The name of a user-defined bucket."
    Value: !Ref myS3BucketBucket

  myS3BucketKMSKeyARN:
    Description: "ARN of the KMS Key"
    Value: !GetAtt myS3BucketKMSKey.Arn
    Export:
      Name: !Sub "${App}-${Env}-myS3Bucket-KMSKeyARN"
