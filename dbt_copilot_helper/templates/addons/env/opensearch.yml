# {% version_info %}

Parameters:
  # Copilot required Parameters...
  App:
    Type: String
    Description: Your application's name.
  Env:
    Type: String
    Description: The environment name your service, job, or workflow is being deployed to.

  # Parameters from the parent stack brought in via addons.parameters.yml...
  EnvironmentSecurityGroup:
    Type: String
  PrivateSubnets:
    Type: String
  VpcId:
    Type: String

Mappings:
  {{ addon_config.prefix }}EnvScalingConfigurationMap:
    {% for env_name, config in addon_config.environments.items() %}
    {{ env_name }}:
      EngineVersion: '{{ config.engine }}'
      InstanceType: '{{ config.instance }}'
      InstanceCount: {{ config.instances }}
      DedicatedMaster: {{ config.master|lower }}
      VolumeSize: {{ config.volume_size }}
    {% endfor %}

  {{ addon_config.prefix }}EngineVersionMap:
    '1.0':
      EngineVersion: 'OpenSearch_1.0'
    '1.1':
      EngineVersion: 'OpenSearch_1.1'
    '1.2':
      EngineVersion: 'OpenSearch_1.2'
    '1.3':
      EngineVersion: 'OpenSearch_1.3'
    '2.3':
      EngineVersion: 'OpenSearch_2.3'

Conditions:
  {{ addon_config.prefix }}DisableHA: !Equals [!FindInMap [{{ addon_config.prefix }}EnvScalingConfigurationMap, !Ref Env, InstanceCount], 1]
  {{ addon_config.prefix }}EnableHA: !Not [Condition: {{ addon_config.prefix }}DisableHA]

Resources:
  {{ addon_config.prefix }}OpenSearchSecret:
    Metadata:
      'aws:copilot:description': 'A Secrets Manager secret to store your OS credentials'
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub '/copilot/${App}/${Env}/secrets/{{ addon_config.name|upper|replace("-", "_") }}'
      Description: !Sub OpenSearch main user secret for ${AWS::StackName}
      GenerateSecretString:
        SecretStringTemplate: '{"username": "opensearch"}'
        GenerateStringKey: "password"
        ExcludePunctuation: false
        RequireEachIncludedType: true
        IncludeSpace: false
        PasswordLength: 20
        ExcludeCharacters: '[]{}()"@/\;=?&`><:|#'
  # Security group to add OS to the VPC,
  # and to allow the Fargate containers to talk to OS
  {{ addon_config.prefix }}OpenSearchSecurityGroup:
    Metadata:
      'aws:copilot:description': 'A security group to access OS'
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'The Security Group for {{ addon_config.name }} to access OpenSearch.'
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value: !Sub 'copilot-${App}-${Env}-{{ addon_config.name }}-OpenSearch-SecurityGroup'

  # Enable ingress from other ECS services created within the environment.
  {{ addon_config.prefix }}OpenSearchIngress:
    Metadata:
      'aws:copilot:description': 'Allow ingress from containers in my application to the OpenSearch cluster'
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress Security Group from Fargate containers
      GroupId: !Ref '{{ addon_config.prefix }}OpenSearchSecurityGroup'
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      SourceSecurityGroupId: !Ref EnvironmentSecurityGroup

  # Single opensearch instance
  {{ addon_config.prefix }}OpenSearchDomain:
    Type: 'AWS::OpenSearchService::Domain'
    Condition: {{ addon_config.prefix }}DisableHA
    Properties:
      AccessPolicies:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            AWS: '*'
          Action:
          - 'es:ESHttp*'
          Resource: !Sub 'arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/{{ (addon_config.name|replace("-", ""))[:15] }}*'
      AdvancedSecurityOptions:
        Enabled: true
        InternalUserDatabaseEnabled: true
        MasterUserOptions:
          MasterUserName:
            !Join [ "",  [ '{% raw %}{{resolve:secretsmanager:{% endraw %}', !Ref {{ addon_config.prefix }}OpenSearchSecret, "{% raw %}:SecretString:username}}{% endraw %}" ]]
          MasterUserPassword:
            !Join [ "",  [ '{% raw %}{{resolve:secretsmanager:{% endraw %}', !Ref {{ addon_config.prefix }}OpenSearchSecret, "{% raw %}:SecretString:password}}{% endraw %}" ]]
      DomainEndpointOptions:
        EnforceHTTPS: true
        TLSSecurityPolicy: 'Policy-Min-TLS-1-2-2019-07'
      EngineVersion: !FindInMap
        - {{ addon_config.prefix }}EngineVersionMap
        - !FindInMap [{{ addon_config.prefix }}EnvScalingConfigurationMap, !Ref Env, EngineVersion]
        - EngineVersion
      NodeToNodeEncryptionOptions:
        Enabled: true
      EncryptionAtRestOptions:
        Enabled: true
      EBSOptions:
        EBSEnabled: true
        VolumeSize: !FindInMap [{{ addon_config.prefix }}EnvScalingConfigurationMap, !Ref Env, VolumeSize]
        VolumeType: gp2
      ClusterConfig:
        DedicatedMasterEnabled: false
        InstanceCount: !FindInMap [{{ addon_config.prefix }}EnvScalingConfigurationMap, !Ref Env, InstanceCount]
        InstanceType: !FindInMap [{{ addon_config.prefix }}EnvScalingConfigurationMap, !Ref Env, InstanceType]
        ZoneAwarenessEnabled: false
      VPCOptions:
        SecurityGroupIds:
          - !Ref {{ addon_config.prefix }}OpenSearchSecurityGroup
        SubnetIds:
          - !Select [0, !Split [ ',', !Ref PrivateSubnets ] ]
      SoftwareUpdateOptions:
        AutoSoftwareUpdateEnabled: true
      LogPublishingOptions:
        AUDIT_LOGS:
          CloudWatchLogsLogGroupArn: !GetAtt {{ addon_config.prefix }}OpenSearchAuditLogGroup.Arn
          Enabled: true
        ES_APPLICATION_LOGS:
          CloudWatchLogsLogGroupArn: !GetAtt {{ addon_config.prefix }}OpenSearchApplicationLogGroup.Arn
          Enabled: true
        SEARCH_SLOW_LOGS:
          CloudWatchLogsLogGroupArn: !GetAtt {{ addon_config.prefix }}OpenSearchSlowSearchLogGroup.Arn
          Enabled: true
        INDEX_SLOW_LOGS:
          CloudWatchLogsLogGroupArn: !GetAtt {{ addon_config.prefix }}OpenSearchSlowIndexLogGroup.Arn
          Enabled: true
      Tags:
        - Key: Name
          Value: !Sub 'copilot-${App}-${Env}-{{ addon_config.name }}-OpenSearch-Domain'
        - Key: 'Copilot-Application'
          Value: !Sub ${App}
        - Key: 'Copilot-Environment'
          Value: !Sub ${Env}

  # An opensearch cluster
  {{ addon_config.prefix }}OpenSearchDomainHA:
    Type: 'AWS::OpenSearchService::Domain'
    Condition: {{ addon_config.prefix }}EnableHA
    Properties:
      AccessPolicies:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            AWS: '*'
          Action:
          - 'es:ESHttp*'
          Resource: !Sub 'arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/{{ (addon_config.name|replace("-", ""))[:15] }}*'
      AdvancedSecurityOptions:
        Enabled: true
        InternalUserDatabaseEnabled: true
        MasterUserOptions:
          MasterUserName:
            !Join [ "",  [ '{% raw %}{{resolve:secretsmanager:{% endraw %}', !Ref {{ addon_config.prefix }}OpenSearchSecret, "{% raw %}:SecretString:username}}{% endraw %}" ]]
          MasterUserPassword:
            !Join [ "",  [ '{% raw %}{{resolve:secretsmanager:{% endraw %}', !Ref {{ addon_config.prefix }}OpenSearchSecret, "{% raw %}:SecretString:password}}{% endraw %}" ]]
      DomainEndpointOptions:
        EnforceHTTPS: true
        TLSSecurityPolicy: 'Policy-Min-TLS-1-2-2019-07'
      EngineVersion: !FindInMap
        - {{ addon_config.prefix }}EngineVersionMap
        - !FindInMap [{{ addon_config.prefix }}EnvScalingConfigurationMap, !Ref Env, EngineVersion]
        - EngineVersion
      NodeToNodeEncryptionOptions:
        Enabled: true
      EncryptionAtRestOptions:
        Enabled: true
      EBSOptions:
        EBSEnabled: true
        VolumeSize: !FindInMap [{{ addon_config.prefix }}EnvScalingConfigurationMap, !Ref Env, VolumeSize]
        VolumeType: gp2
      ClusterConfig:
        DedicatedMasterEnabled: !FindInMap [{{ addon_config.prefix }}EnvScalingConfigurationMap, !Ref Env, DedicatedMaster]
        InstanceCount: !FindInMap [{{ addon_config.prefix }}EnvScalingConfigurationMap, !Ref Env, InstanceCount]
        InstanceType: !FindInMap [{{ addon_config.prefix }}EnvScalingConfigurationMap, !Ref Env, InstanceType]
        ZoneAwarenessEnabled: true
        ZoneAwarenessConfig:
          AvailabilityZoneCount: 2
          #Fn::length always resolves to 1 despite there being subnets.
      VPCOptions:
        SecurityGroupIds:
          - !Ref {{ addon_config.prefix }}OpenSearchSecurityGroup
        SubnetIds: !Split [ ",", !Ref PrivateSubnets ]
      SoftwareUpdateOptions:
        AutoSoftwareUpdateEnabled: true
      LogPublishingOptions:
        AUDIT_LOGS:
          CloudWatchLogsLogGroupArn: !GetAtt {{ addon_config.prefix }}OpenSearchAuditLogGroup.Arn
          Enabled: true
        ES_APPLICATION_LOGS:
          CloudWatchLogsLogGroupArn: !GetAtt {{ addon_config.prefix }}OpenSearchApplicationLogGroup.Arn
          Enabled: true
        SEARCH_SLOW_LOGS:
          CloudWatchLogsLogGroupArn: !GetAtt {{ addon_config.prefix }}OpenSearchSlowSearchLogGroup.Arn
          Enabled: true
        INDEX_SLOW_LOGS:
          CloudWatchLogsLogGroupArn: !GetAtt {{ addon_config.prefix }}OpenSearchSlowIndexLogGroup.Arn
          Enabled: true
      Tags:
        - Key: Name
          Value: !Sub 'copilot-${App}-${Env}-{{ addon_config.name }}-OpenSearch-Domain'
        - Key: 'Copilot-Application'
          Value: !Sub ${App}
        - Key: 'Copilot-Environment'
          Value: !Sub ${Env}

  {{ addon_config.prefix }}OpenSearchEndpointConfigParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/copilot/${App}/${Env}/secrets/{{ addon_config.secret_name }}"
      Type: String
      Value: !Sub
        - "https://${username}:${password}@${url}"
        - url: !If
            - {{ addon_config.prefix }}EnableHA
            - !GetAtt {{ addon_config.prefix }}OpenSearchDomainHA.DomainEndpoint
            - !GetAtt {{ addon_config.prefix }}OpenSearchDomain.DomainEndpoint
          username: !Join [ "",  [ '{% raw %}{{resolve:secretsmanager:{% endraw %}', !Ref {{ addon_config.prefix }}OpenSearchSecret, "{% raw %}:SecretString:username}}{% endraw %}" ]]
          password: !Join [ "",  [ '{% raw %}{{resolve:secretsmanager:{% endraw %}', !Ref {{ addon_config.prefix }}OpenSearchSecret, "{% raw %}:SecretString:password}}{% endraw %}" ]]

  {{ addon_config.prefix }}OpenSearchAuditLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/opensearch/${App}/${Env}/{{ addon_config.prefix }}/audit'
      RetentionInDays: 7
      Tags:
        - Key: 'Copilot-Application'
          Value: !Sub ${App}
        - Key: 'Copilot-Environment'
          Value: !Sub ${Env}

  {{ addon_config.prefix }}OpenSearchApplicationLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/opensearch/${App}/${Env}/{{ addon_config.prefix }}/application'
      RetentionInDays: 7
      Tags:
        - Key: 'Copilot-Application'
          Value: !Sub ${App}
        - Key: 'Copilot-Environment'
          Value: !Sub ${Env}

  {{ addon_config.prefix }}OpenSearchSlowSearchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/opensearch/${App}/${Env}/{{ addon_config.prefix }}/slow-search'
      RetentionInDays: 7
      Tags:
        - Key: 'Copilot-Application'
          Value: !Sub ${App}
        - Key: 'Copilot-Environment'
          Value: !Sub ${Env}

  {{ addon_config.prefix }}OpenSearchSlowIndexLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/opensearch/${App}/${Env}/{{ addon_config.prefix }}/slow-index'
      RetentionInDays: 7
      Tags:
        - Key: 'Copilot-Application'
          Value: !Sub ${App}
        - Key: 'Copilot-Environment'
          Value: !Sub ${Env}
